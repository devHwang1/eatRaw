// Generated by view binder compiler. Do not edit!
package com.example.eatraw.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.eatraw.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecyclerviewReviewBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView button1;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView rating;

  @NonNull
  public final TextView reviewContent;

  @NonNull
  public final ImageView reviewStar;

  @NonNull
  public final TextView storeName;

  private RecyclerviewReviewBinding(@NonNull LinearLayout rootView, @NonNull TextView button1,
      @NonNull ImageView imageView, @NonNull TextView rating, @NonNull TextView reviewContent,
      @NonNull ImageView reviewStar, @NonNull TextView storeName) {
    this.rootView = rootView;
    this.button1 = button1;
    this.imageView = imageView;
    this.rating = rating;
    this.reviewContent = reviewContent;
    this.reviewStar = reviewStar;
    this.storeName = storeName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RecyclerviewReviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecyclerviewReviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recyclerview_review, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecyclerviewReviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button1;
      TextView button1 = ViewBindings.findChildViewById(rootView, id);
      if (button1 == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.rating;
      TextView rating = ViewBindings.findChildViewById(rootView, id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.reviewContent;
      TextView reviewContent = ViewBindings.findChildViewById(rootView, id);
      if (reviewContent == null) {
        break missingId;
      }

      id = R.id.reviewStar;
      ImageView reviewStar = ViewBindings.findChildViewById(rootView, id);
      if (reviewStar == null) {
        break missingId;
      }

      id = R.id.storeName;
      TextView storeName = ViewBindings.findChildViewById(rootView, id);
      if (storeName == null) {
        break missingId;
      }

      return new RecyclerviewReviewBinding((LinearLayout) rootView, button1, imageView, rating,
          reviewContent, reviewStar, storeName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
